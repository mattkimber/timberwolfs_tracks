// Ground and slope tiles
template ground_tile(x, y, m) { [x*m, (y+8)*m, 64*m, 31*m, -31*m, 1*m] }
template ground_tile_slope(x, y, m) { [x*m, y*m, 64*m, 39*m, -31*m, -7*m] }

// Tracks with ballast
template tmpl_straight_y_m(y,m) {
    ground_tile(0, y, m)
    ground_tile(72, y, m)
}

template tmpl_slope_y_m(y, m) {
    ground_tile_slope(0, y, m)
    ground_tile_slope(72, y, m)
    ground_tile_slope(144, y, m)
    ground_tile_slope(216, y, m)
}

template tmpl_diagonal_y_m(y,m) {
    ground_tile(72,  y+43, m)
    ground_tile(0,   y, m)
    ground_tile(216, y, m)
    ground_tile(0,   y+43, m)
}

// Ballast underlays
template tmpl_crossing_underlays(m) {
    ground_tile(72, 344, m)
    ground_tile(216, 344,m)
    ground_tile(0, 344,m)
    ground_tile(144, 344,m)
    ground_tile(0, 387,m)
}

template tmpl_underlay_railtypes(m) {
    tmpl_straight_y_m(0, m)
    tmpl_diagonal_y_m(43, m)
    tmpl_slope_y_m(129,m)

    // X-crossing
    ground_tile(0, 215, m)

    tmpl_crossing_underlays(m)
}

// Tracks without ballast
template tmpl_overlay_railtypes(m) {
    tmpl_straight_y_m(172, m)
    tmpl_diagonal_y_m(258, m)
    //tmpl_slope_y_m(86,m)
}

// Bridges
template tmpl_bridges_underlay(m) {
    tmpl_straight_y_m(0, m)
    tmpl_slope_y_m(129,m)
    //tmpl_diagonal_y_m(215, m)
}

// Tracks in tunnels
template tmpl_tunnel_tracks(m) {
    tmpl_straight_y_m(0, m)
    tmpl_straight_y_m(0, m)
}

// Depots
template tmpl_depot(m) {
    [93*m,  243*m, 15*m,  13*m,  10*m,    2*m ] // \ rear wall
    [58*m,  168*m, 50*m,  44*m,  -3*m,  -30*m ] // \ (front open)
    [116*m, 81*m,  16*m,  13*m, -23*m,    1*m ] // / rear wall
    [116*m, 114*m, 50*m,  44*m, -45*m,  -30*m ] // / (front open)
    [0*m,   6*m,   50*m,  44*m, -47*m,  -29*m ] // / (rear)
    [174*m, 6*m,   50*m,  44*m,  -2*m,  -29*m ] // \ (rear)
}


// GUI
// Single icon sprite
template tmpl_gui_icon(x, y) {
    [x, y, 20, 20, 0, 0]
}

// Single cursor sprite
template tmpl_gui_cursor(x, y) {
    [x, y, 32, 32, 0, 0]
}

// GUI sprites (8 icons, 8 cursors)
template tmpl_gui() {
    tmpl_gui_icon(  0, 0)
    tmpl_gui_icon( 25, 0)
    tmpl_gui_icon( 50, 0)
    tmpl_gui_icon( 75, 0)
    tmpl_gui_icon(100, 0)
    tmpl_gui_icon(125, 0)
    tmpl_gui_icon(150, 0)
    tmpl_gui_icon(175, 0)

    tmpl_gui_cursor(200, 0)
    tmpl_gui_cursor(250, 0)
    tmpl_gui_cursor(300, 0)
    tmpl_gui_cursor(350, 0)
    tmpl_gui_cursor(400, 0)
    tmpl_gui_cursor(450, 0)
    tmpl_gui_cursor(500, 0)
    tmpl_gui_cursor(550, 0)
}


// Fences
template tmpl_fences(y, m) {
     [ ((0*72)+15)*m, (y+5)*m,    34*m, 30*m,  -32*m,  -10*m] //  / (top)
     [ ((1*72)+15)*m, (y+5)*m,    34*m, 30*m,    1*m,  -10*m] //  \ (right)
     [ ((2*72)+30)*m, (y)*m,       4*m, 39*m,   -1*m,  -23*m] //  | (right)
     [ ((3*72)+ 0)*m, (y+5)*m,    64*m, 15*m,  -30*m,  -14*m] //  _ (bottom)
     [ ((2*72)+15)*m, (y+43)*m,   34*m, 35*m,  -32*m,  -15*m] //  / uphill (top)
     [ ((1*72)+15)*m, (y+43)*m,   34*m, 35*m,    1*m,  -15*m] //  \ uphill (top)
     [ ((0*72)+15)*m, (y+43)*m,   34*m, 35*m,  -32*m,  -15*m] //  / downhill (top)
     [ ((3*72)+15)*m, (y+43)*m,   34*m, 35*m,    1*m,  -15*m] //  \ downhill (top)

     [ ((0*72)+15)*m, (y+5)*m,    34*m, 30*m,  -30*m,  -10*m] //  /   (bottom)
     [ ((1*72)+15)*m, (y+5)*m,    34*m, 30*m,    0*m,  -10*m] //  \   (left)
     [ ((2*72)+30)*m, (y)*m,       4*m, 39*m,    2*m,  -23*m] //  |   (left)
     [ ((3*72)+ 0)*m, (y+5)*m,    64*m, 15*m,  -30*m,  -12*m] //  _   (top)
     [ ((2*72)+15)*m, (y+43)*m,   34*m, 35*m,  -31*m,  -15*m] //  / uphill
     [ ((1*72)+15)*m, (y+43)*m,   34*m, 35*m,    0*m,  -15*m] //  \ uphill
     [ ((0*72)+15)*m, (y+43)*m,   34*m, 35*m,  -31*m,  -15*m] //  / downhill
     [ ((3*72)+15)*m, (y+43)*m,   34*m, 35*m,    0*m,  -15*m] //  \ downhill
}

// Catenary
template tmpl_catenary(m) {
    // Narrow, flat
    [ ((0*72)+16)*m, ((0*43)+13)*m,  32*m,  22*m,   (-116/4)*m,  ( -4/4)*m ] // /
    [ ((1*72)+16)*m, ((0*43)+13)*m,  32*m,  22*m,   (-4/4)*m,           0  ] // \
    [ ((2*72) +0)*m, ((0*43)+17)*m,  32*m,   6*m,   (-4/4)*m,     (-8/4)*m ] // _
    [ ((215) + 0)*m, ((0*43)+6)*m,   1*m,   18*m,   (0/4)*m,      (-8/4)*m ] // |

    // Narrow, hills
    [ ((0*72)+16)*m, ((1*43)+5)*m,   32*m,  26*m,   (-116/4)*m,  (-8/4)*m ]
    [ ((1*72)+16)*m, ((1*43)+12)*m,  32*m,  12*m,   (  -4/4)*m,  (32/4)*m ]
    [ ((2*72)+16)*m, ((1*43)+12)*m,  32*m,  12*m,   (-116/4)*m,  (28/4)*m ] 
    [ ((3*72)+16)*m, ((1*43)+4)*m,   32*m,  27*m,   (  -4/4)*m,  (-8/4)*m ]

    // Wide A, flat
    [ ((0*72)+16)*m, ((2*43)+13)*m,  32*m,  22*m,   (-116/4)*m,  ( -4/4)*m ] // /
    [ ((1*72)+16)*m, ((4*43)+13)*m,  32*m,  22*m,   (-4/4)*m,           0  ] // \
    [ ((2*72) +0)*m, ((4*43)+17)*m,  32*m,   6*m,   (-4/4)*m,     (-8/4)*m ] // _
    [ ((215) + 0)*m, ((2*43)+6)*m,   1*m,   18*m,   (0/4)*m,      (-8/4)*m ] // |

    // Wide A, hills
    [ ((0*72)+16)*m, ((3*43)+5)*m,   32*m,  26*m,   (-116/4)*m,  (-8/4)*m ]
    [ ((1*72)+16)*m, ((5*43)+12)*m,  32*m,  12*m,   (  -4/4)*m,  (32/4)*m ]
    [ ((2*72)+16)*m, ((5*43)+12)*m,  32*m,  12*m,   (-116/4)*m,  (28/4)*m ] 
    [ ((3*72)+16)*m, ((3*43)+4)*m,   32*m,  27*m,   (  -4/4)*m,  (-8/4)*m ]

    // Wide B, flat
    [ ((0*72)+16)*m, ((4*43)+13)*m,  32*m,  22*m,   (-116/4)*m,  ( -4/4)*m ] // /
    [ ((1*72)+16)*m, ((2*43)+13)*m,  32*m,  22*m,   (-4/4)*m,           0  ] // \
    [ ((2*72) +0)*m, ((2*43)+17)*m,  32*m,   6*m,   (-4/4)*m,     (-8/4)*m ] // _
    [ ((215) + 0)*m, ((4*43)+6)*m,   1*m,   18*m,   (0/4)*m,      (-8/4)*m ] // |

    // Wide B, hills
    [ ((0*72)+16)*m, ((5*43)+5)*m,   32*m,  26*m,   (-116/4)*m,  (-8/4)*m ]
    [ ((1*72)+16)*m, ((3*43)+12)*m,  32*m,  12*m,   (  -4/4)*m,  (32/4)*m ]
    [ ((2*72)+16)*m, ((3*43)+12)*m,  32*m,  12*m,   (-116/4)*m,  (28/4)*m ] 
    [ ((3*72)+16)*m, ((5*43)+4)*m,   32*m,  27*m,   (  -4/4)*m,  (-8/4)*m ]

    // Tunnels
    [ ((0*72)+24)*m, ((6*43)+17)*m, 17*m,  11*m, (-116/4)*m,  (28/4)*m ]
    [ ((1*72)+24)*m, ((6*43)+16)*m, 17*m,  12*m,   (-4/4)*m,  (-4/4)*m ]
    [ ((2*72)+23)*m, ((6*43)+16)*m, 18*m,  12*m,  (-40/4)*m, (-16/4)*m ]
    [ ((3*72)+23)*m, ((6*43)+17)*m, 18*m,  11*m,   (56/4)*m,  (32/4)*m ] 
}

// Catenary pylons
template tmpl_pylon(m) {

    [ 197*m, 7*m, 11*m, 18*m,  -6*m, -14*m ] // 1  // offset
    [ 445*m, 4*m, 11*m, 21*m,  -4*m, -19*m ] // 2  // offset
    [ 79*m, 7*m, 11*m,  18*m,  -1*m, -14*m ] // 3  // offset
    [ 317*m, 5*m, 12*m, 20*m, -10*m, -18*m ] // 4  // offset
    [ 141*m, 2*m, 5*m,  17*m,  -5*m, -15*m ] // 5  // offset
    [ 385*m, 0*m, 5*m,  19*m,  -1*m, -18*m ] // 6  // offset
    [ 19*m, 2*m, 12*m,  17*m,  -2*m, -12*m ] // 7  // offset
    [ 256*m, 2*m, 12*m, 18*m,  -9*m, -14*m ] // 8  // offset

}